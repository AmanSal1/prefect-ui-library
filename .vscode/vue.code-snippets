{
    "component": {
        "scope": "vue",
        "prefix": "vue",
        "body": [
            "<template>",
            "  <div class=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}\">",
            "",
            "  </div>",
            "</template>",
            "",
            "<script lang=\"ts\" setup>",
            "  defineProps<{",
            "    ${1}",
            "  }>()",
            "</script>",
            "",
            "<style>",
            "",
            "</style>"
        ],
        "description": "Typescript Setup Component"
    },    
    "vue-demo-section": {
        "scope": "vue",
        "prefix": "vue",
        "body": [
            "<template>",
            "  <DemoSection heading=\"${1}\">",
            "",
            "  </DemoSection>",
            "</template>",
            "",
            "<script lang=\"ts\" setup>",
            "  import DemoSection from '../components/DemoSection.vue'",
            "</script>"
        ],
        "description": "vue-demo"
    },
    "vue-demo-section-sub-section": {
        "scope": "vue",
        "prefix": "vue",
        "body": [
          "<template>",
          "  <DemoSection heading=\"${1}\">",
          "    <DemoSubSection heading=\"${2}\">",
          "",
          "    </DemoSubSection>",
          "  </DemoSection>",
          "</template>",
          "",
          "<script lang=\"ts\" setup>",
          "  import DemoSection from '../components/DemoSection.vue'",
          "  import DemoSubSection from '../components/DemoSubSection.vue'",
          "</script>"
        ],
        "description": "vue-demo"
    },
    "template": {
        "scope": "vue",
        "prefix": "template",
        "body": [
            "<template>",
            "  $1",
            "</template>"
        ],
        "description": "Create <template> block"
    },
    "script": {
        "scope": "vue",
        "prefix": "script",
        "body": [
            "<script lang=\"ts\">",
            "import { defineComponent } from 'vue';",
            "",
            "export default defineComponent({",
            "  name: '$1',",
            "  expose: [],",
            "  $2",
            "});",
            "</script>"
        ],
        "description": "Create <script> block"
    },
    "script setup": {
        "scope": "vue",
        "prefix": "script",
        "body": [
          "<script lang=\"ts\" setup>",
          "  defineProps<{",
          "    $1",
          "  }>()",
          "</script>"
        ],
        "description": "Typescript setup"
    },
    "style": {
        "scope": "vue",
        "prefix": "style",
        "body": [
            "<style>",
            "$1",
            "</style>"
        ],
        "description": "Create <style> block"
    },
    "v-for": {
        "scope": "html",
        "prefix": "v-for",
        "body": [
            "<template v-for=\"$1 in $2\">",
            "  $3",
            "</template>"
        ],
        "description": "Create html tag with v-for"
    },
    "v-if": {
        "scope": "html",
        "prefix": "v-if",
        "body": [
            "<template v-if=\"$1\">",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-if"
    },
    "v-else-if": {
        "scope": "html",
        "prefix": "v-else-if",
        "body": [
            "<template v-else-if=\"$1\">",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-else-if"
    },
    "v-else": {
        "scope": "html",
        "prefix": "v-else",
        "body": [
            "<template v-else>",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-else"
    },
    "mapper": {
        "prefix": "mapper",
        "body": [
            "import { MapFunction } from '@/services/Mapper'",
            "",
            "export const map${1}: MapFunction<${2}, ${3}> = function(source: ${2}): ${3} {",
            "  return ${4}",
            "}"
        ],
        "description": "Map function"
    },
    "mocker": {
        "prefix": "mocker",
        "body": [
          "import { MockFunction } from '@/services/Mocker'",
          "",
          "export const random${1}: MockFunction<${2}> = function() {",
          "  return ${3}",
          "}"
        ],
        "description": "Mock function"
    },
    "Api Service": {
        "prefix": "api",
        "body": [
          "import { Api, ApiRoute } from './Api'",
          "import { mapper } from './Mapper'",
          "",
          "export class ${TM_FILENAME_BASE} extends Api {",
          "",
          "  protected override route: ApiRoute = '/${1}'",
          "",
          "}"
        ],
        "description": "Api Service"
    },
    "model": {
        "prefix": "model",
        "body": [
          "export interface I${TM_FILENAME_BASE} {",
          "  ${1}",
          "}",
          "",
          "export class ${TM_FILENAME_BASE} implements I${TM_FILENAME_BASE} {",
          "",
          "  public constructor(${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}: I${TM_FILENAME_BASE}) {",
          "",
          "  }",
          "}"
        ],
        "description": "Typescript model"
    },
    "Typescript type": {
        "prefix": "type",
        "body": [
          "export type ${TM_FILENAME_BASE} = {",
          "  ${1}",
          "}"
        ],
        "description": "Typescript type"
    }
}